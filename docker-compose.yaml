version: "3.8"
services:
  # Order Service
  order-service:
    build: ./OrderService
    container_name: "order-service"
    ports:
      - "8000:8000"
    depends_on:
      - order-database-host
      - rabbitmq
    volumes:
      - ./OrderService/src:/app

  order-database-host:
    image: postgres
    container_name: "order-database-host"
    environment:
      - POSTGRES_USER=${ORDER_POSTGRES_USER}
      - POSTGRES_PASSWORD=${ORDER_POSTGRES_PASSWORD}
      - POSTGRES_DB=${ORDER_POSTGRES_DB}
    volumes:
      - order-database-data:/var/lib/postgresql/data
      - ./OrderService/MigrationScript:/docker-entrypoint-initdb.d/
  # / Order Service

  merchant-service-api:
    container_name: "Merchant-Service-api"
    build: ./MerchantService
    environment:
      - POSTGRES_HOST=merchant-service-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DATABASE=merchant_db
      - ENVIRONMENT=dev

    ports:
      - "8001:8000"
    volumes:
      - ./MerchantService/src:/app/src
    depends_on:
      - merchant-service-db

  merchant-service-db:
    container_name: "Merchant-Service-db"
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=merchant_db

    volumes:
      - merchant-service-db-data:/var/lib/postgresql/data
      - ./MerchantService/MigrationScript:/docker-entrypoint-initdb.d/

  rabbitmq:
    image: rabbitmq:3.9.8-management
    container_name: "rabbitmq"
    hostname: rabbitmq
    ports:
      - "8080:15672"

volumes:
  order-database-data:
  merchant-service-db-data:
