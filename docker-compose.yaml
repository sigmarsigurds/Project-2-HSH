version: "3.8"
services:
  # Order Service
  order-service:
    build: ./OrderService
    container_name: "order-service"
    ports:
      - "8000:8000"
    depends_on:
      - order-database-host
      - merchant-service-api
      - buyer
      - inventory-service-api
      - rabbitmq
      - email-service
    volumes:
      - ./OrderService/src:/app
    networks:
      - order-network
      - rabbitmq-network

  order-database-host:
    image: postgres
    container_name: "order-database-host"
    environment:
      - POSTGRES_USER=${ORDER_POSTGRES_USER}
      - POSTGRES_PASSWORD=${ORDER_POSTGRES_PASSWORD}
      - POSTGRES_DB=${ORDER_POSTGRES_DATABASE}
    volumes:
      - order-database-data:/var/lib/postgresql/data
      - ./OrderService/MigrationScript:/docker-entrypoint-initdb.d/
    networks:
      - order-network
      - rabbitmq-network
  # / Order Service

  # Merchant Service
  merchant-service-api:
    container_name: "Merchant-Service-api"
    build: ./MerchantService
    environment:
      - HOST=0.0.0.0
      - PORT=8001
      - POSTGRES_HOST=merchant-service-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DATABASE=merchant_db
      - ENVIRONMENT=dev

    ports:
      - "8001:8001"
    volumes:
      - ./MerchantService/src:/app/src
    depends_on:
      - merchant-service-db
    networks:
      - merchant-network
      - rabbitmq-network

  merchant-service-db:
    container_name: "Merchant-Service-database"
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=merchant_db

    volumes:
      - merchant-service-database-data:/var/lib/postgresql/data
      - ./MerchantService/MigrationScript:/docker-entrypoint-initdb.d/

    networks:
      - merchant-network

  # / Merchant Service

  # Buyer Service

  buyer:
    build: ./BuyerService/src
    container_name: "buyer_container"
    ports:
      - "8002:8002"
    depends_on:
      - buyer_db
    volumes:
      - ./BuyerService/src:/app
    networks:
      - buyer-network
      - rabbitmq-network

  buyer_db:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=Buyer
    volumes:
      - buyer_db-data:/var/lib/postgresql/data
      - ./BuyerService/migration_scripts:/docker-entrypoint-initdb.d/
    networks:
      - buyer-network

  # / Buyer Service

  # Email Service
  email-service:
    build: ./EmailService
    depends_on:
      - rabbitmq
    volumes:
      - ./EmailService/src:/app
    networks:
      - rabbitmq-network
  # / Email Service

  # Email Service
  payment-service:
    build: ./PaymentService
    depends_on:
      - rabbitmq
    volumes:
      - ./PaymentService/src:/app
    networks:
      - rabbitmq-network
  # / Email Service

  # Inventory Service

  inventory-service-api:
    container_name: "Inventory-Service-api"
    build: ./InventoryService
    environment:
      - HOST=0.0.0.0
      - PORT=8003
      - POSTGRES_HOST=inventory-service-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DATABASE=inventory_db
      - ENVIRONMENT=dev

    ports:
      - "8003:8003"
    volumes:
      - ./InventoryService/src:/app/src
    depends_on:
      - inventory-service-db
    networks:
      - rabbitmq-network
      - inventory-network

  inventory-service-db:
    container_name: "Inventory-Service-database"
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=inventory_db

    volumes:
      - inventory-service-database-data:/var/lib/postgresql/data
      - ./InventoryService/MigrationScript:/docker-entrypoint-initdb.d/
    networks:
      - inventory-network

  # / Inventory Service

  rabbitmq:
    image: rabbitmq:3.9.8-management
    container_name: "rabbitmq"
    hostname: rabbitmq
    ports:
      - "8080:15672"
    networks:
      - rabbitmq-network

volumes:
  order-database-data:
  merchant-service-database-data:
  inventory-service-database-data:
  buyer_db-data:

networks:
  order-network:
    driver: bridge

  buyer-network:
    driver: bridge

  merchant-network:
    driver: bridge

  inventory-network:
    driver: bridge

  rabbitmq-network:
    driver: bridge
